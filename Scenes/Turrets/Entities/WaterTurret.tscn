[gd_scene load_steps=34 format=2]

[ext_resource path="res://Code/Properties/entity_detect.gd" type="Script" id=1]
[ext_resource path="res://Shaders/hit_flash.gdshader" type="Shader" id=2]
[ext_resource path="res://Code/Turret/turret_empty_state.gd" type="Script" id=3]
[ext_resource path="res://Code/Turret/turret_state_manager.gd" type="Script" id=4]
[ext_resource path="res://Code/Turret/turret.gd" type="Script" id=5]
[ext_resource path="res://Code/Turret/turret_start.gd" type="Script" id=6]
[ext_resource path="res://Code/Turret/turret_idle.gd" type="Script" id=7]
[ext_resource path="res://Art/Level/vending machines.png" type="Texture" id=8]
[ext_resource path="res://Code/Turret/Attack States/turret_attack_manual.gd" type="Script" id=9]
[ext_resource path="res://Code/Turret/Attack States/turret_attack_auto.gd" type="Script" id=10]
[ext_resource path="res://Scenes/Projectiles/Water/WaterProjectileAir.tscn" type="PackedScene" id=11]
[ext_resource path="res://Scenes/Projectiles/Water/ProjectileEffectWater.tscn" type="PackedScene" id=12]
[ext_resource path="res://Scenes/Projectiles/Water/ShootEffectWater.tscn" type="PackedScene" id=13]
[ext_resource path="res://Scenes/Turrets/TurretSelected/SelectedWater.tscn" type="PackedScene" id=14]
[ext_resource path="res://Scenes/Projectiles/Water/WaterProjectileGround.tscn" type="PackedScene" id=15]
[ext_resource path="res://Scenes/Enemies/Charges/Medium/chargeMediumWater.tscn" type="PackedScene" id=16]
[ext_resource path="res://Scenes/LevelComponents/ParticleGenerator.tscn" type="PackedScene" id=17]

[sub_resource type="Animation" id=5]
resource_name = "Attack"
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 4 ]
}

[sub_resource type="Animation" id=9]
resource_name = "Empty"
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 1 ]
}

[sub_resource type="Animation" id=6]
resource_name = "Idle"
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}

[sub_resource type="Animation" id=16]
resource_name = "Manual"
length = 0.2
step = 0.005
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.02, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 0.75, 1 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:material:shader_param/active")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.02, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}

[sub_resource type="Animation" id=11]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1 ]
}
tracks/1/type = "bezier"
tracks/1/path = NodePath(".:scale:x")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath(".:scale:y")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}

[sub_resource type="Animation" id=12]
resource_name = "Start"
length = 0.2
step = 0.005
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.02, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 0.75, 1 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:material:shader_param/active")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.02, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/2/type = "method"
tracks/2/path = NodePath("StateManager/Start")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.2 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "start_finished"
} ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}

[sub_resource type="AnimationNodeAnimation" id=7]
animation = "Attack"

[sub_resource type="AnimationNodeAnimation" id=10]
animation = "Empty"

[sub_resource type="AnimationNodeAnimation" id=8]
animation = "Idle"

[sub_resource type="AnimationNodeAnimation" id=17]
animation = "Manual"

[sub_resource type="AnimationNodeAnimation" id=14]
animation = "Start"

[sub_resource type="AnimationNodeStateMachine" id=3]
states/Attack/node = SubResource( 7 )
states/Attack/position = Vector2( 324, 144 )
states/Empty/node = SubResource( 10 )
states/Empty/position = Vector2( 324, 231 )
states/Idle/node = SubResource( 8 )
states/Idle/position = Vector2( 520, 144 )
states/Manual/node = SubResource( 17 )
states/Manual/position = Vector2( 129, 144 )
states/Start/node = SubResource( 14 )
states/Start/position = Vector2( 520, 231 )
start_node = "Idle"
graph_offset = Vector2( -186, 57 )

[sub_resource type="AnimationNodeStateMachinePlayback" id=4]

[sub_resource type="ShaderMaterial" id=13]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/active = false
shader_param/colour = Color( 0.560784, 0.827451, 1, 1 )

[sub_resource type="CircleShape2D" id=2]
radius = 100.0

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 8, 9.5 )

[node name="WaterTurret" type="StaticBody2D"]
collision_layer = 8
collision_mask = 0
script = ExtResource( 5 )
__meta__ = {
"_edit_group_": true
}
power_up_effect = ExtResource( 16 )
power_up_position = NodePath("PowerPoint")
cooldown = 0.5

[node name="ParticleGenerator" parent="." instance=ExtResource( 17 )]

[node name="SelectedWater" parent="." instance=ExtResource( 14 )]
visible = false
position = Vector2( 0, 2 )

[node name="StateManager" type="Node" parent="."]
script = ExtResource( 4 )
starting_state = NodePath("Start")

[node name="Idle" type="Node" parent="StateManager"]
script = ExtResource( 7 )
animation_name = "Idle"
attack_node = NodePath("../Attack")
manual_node = NodePath("../Manual")

[node name="Attack" type="Node" parent="StateManager"]
script = ExtResource( 10 )
animation_name = "Attack"
idle_node = NodePath("../Idle")
empty_node = NodePath("../Empty")
manual_node = NodePath("../Manual")
turret_range = NodePath("../../AttackRange")
Projectile = ExtResource( 15 )
projectileEffect = ExtResource( 13 )

[node name="Empty" type="Node" parent="StateManager"]
script = ExtResource( 3 )
animation_name = "Empty"
attack_node = NodePath("../Attack")

[node name="Start" type="Node" parent="StateManager"]
script = ExtResource( 6 )
animation_name = "Start"
idle_node = NodePath("../Idle")
empty_node = NodePath("../Empty")

[node name="Manual" type="Node" parent="StateManager"]
script = ExtResource( 9 )
animation_name = "Manual"
empty_node = NodePath("../Empty")
start_node = NodePath("../Start")
manual_effect = NodePath("../../SelectedWater")
Projectile = ExtResource( 11 )
projectileEffect = ExtResource( 12 )

[node name="PowerPoint" type="Position2D" parent="."]

[node name="FirePoint" type="Position2D" parent="."]
position = Vector2( 0, 13 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Attack = SubResource( 5 )
anims/Empty = SubResource( 9 )
anims/Idle = SubResource( 6 )
anims/Manual = SubResource( 16 )
anims/RESET = SubResource( 11 )
anims/Start = SubResource( 12 )

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource( 3 )
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/playback = SubResource( 4 )

[node name="FireRateTimer" type="Timer" parent="."]
one_shot = true

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 13 )
scale = Vector2( 1.0037, 1 )
texture = ExtResource( 8 )
hframes = 2
vframes = 4
frame = 1

[node name="AttackRange" type="Area2D" parent="."]
position = Vector2( 0, 50 )
collision_layer = 0
collision_mask = 4
script = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="AttackRange"]
visible = false
shape = SubResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
position = Vector2( 0, -1.5 )
shape = SubResource( 1 )

[connection signal="body_entered" from="AttackRange" to="AttackRange" method="_on_AttackRange_body_entered"]
[connection signal="body_exited" from="AttackRange" to="AttackRange" method="_on_AttackRange_body_exited"]
